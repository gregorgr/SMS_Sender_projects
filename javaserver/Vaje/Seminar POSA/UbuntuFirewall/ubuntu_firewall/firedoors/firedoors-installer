#!/bin/bash
#
# Version: 1.0
#
#     This installer script installs/removes Firedoors firewall 

#  Check to see that we are ROOT!
exec_user=`/usr/bin/whoami`
if [ "$exec_user" != "root" ] ; then
	echo -e "\E[31;40mThis installer script must be executed with root privileges!  Try prepending, 'sudo' to the beginning!\E[32;0m"
	exit 1
fi
clear
#  Is this an Ubuntu System?
echo "Checking for Ubuntu system..."
sleep 1
OS_FILE_LOC="`ls /etc | grep release`"
OS_INFO="`cat /etc/$OS_FILE_LOC`"
IS_UBUNTU="`echo $OS_INFO | egrep -io 'Debian|Ubuntu' | uniq`"
if [ "$IS_UBUNTU" == "" ]; then
	echo -e '\E[31;40m'
	echo "This installer script did NOT detect an Ubuntu System!  Although specifically"
	echo "written for Ubuntu Linux, Firedoors *MAY* work on your Linux system too!"
	echo "Just be aware that some file paths vary from distribution to distribution and it"
	echo "could be a potential cause for problems!  If you install Firedoors firewall on a"
	echo "non-Ubuntu system, it's recommended that you enable the verbosity option in the"
	echo "config file so that you can see any warnings generated during the execution of"
	echo "Firedoors firewall .  Once you're satisfied that Firedoors firewall  is functioning as"
	echo "expected, then you may choose to disable the verbosity option.  Good luck!"
	echo -e '\E[32;0m'
	echo "Continue? (y=yes, n=no)"
	read yesorno
	while [[ "$yesorno" != "y" && "$yesorno" != "n" && "$yesorno" != "Y" && "$yesorno" != "N" ]]; do
		clear
		echo -e '\E[31;40m'
		echo "Huh?  Invalid entry --> $yesorno"
		echo -e '\E[32;0m'
		sleep 1
		echo "Continue? (y=yes, n=no)"
		read yesorno
	done
	if [[ "$yesorno" == "n" || "$yesorno" == "N" ]]; then
		echo "Exiting Firedoors firewall installation script..."
		exit 0
	else
		sleep 1
		echo "Continuing installation..."
		sleep 1
	fi
else
	echo -e "\E[32;40m$IS_UBUNTU detected!\E[32;0m"
	sleep 1
	echo "Continuing installation..."
	sleep 1
fi
#  Remove any existing firewall rules from the kernel table and clean up status file from previous firewall install
IPT=`which iptables`
$IPT -F
$IPT -t nat --flush
$IPT --zero
$IPT --policy INPUT ACCEPT
$IPT --policy OUTPUT ACCEPT
$IPT --policy FORWARD ACCEPT
echo 0 > /proc/sys/net/ipv4/ip_forward
rm -f /var/run/firedoors &> /dev/null
#  Are we installing or removing Firedoors firewall?
echo "Install or Remove Firedoors firewall? (I=install, R=remove): "
read installorremove
while [[ "$installorremove" != "I" && "$installorremove" != "i" && "$installorremove" != "R" && "$installorremove" != "r" ]]; do
	clear
	echo -e '\E[31;40m'
	echo "Huh?  Invalid entry --> $installorremove"
	echo -e '\E[32;0m'
	sleep 1
	echo "Install or Remove Firedoors firewall? (I=install, R=remove): "
	read installorremove
done
#  Install selected
if [[ "$installorremove" == "I" || "$installorremove" == "i" ]]; then
	if [ -f /etc/firedoors/firedoors-config ]; then
		echo "Previous installation detected!  Upgrading Firedoors firewall..."
		mv /etc/firedoors/firedoors-config /etc/firedoors/firedoors-config.old
		rm -f /etc/init.d/firedoors.sh >&/dev/null 2>&1
		rm -f /etc/init.d/firedoors >&/dev/null 2>&1		
	fi
	#mkdir /etc/firedoors
	cp -f ./firedoors-config /etc/firedoors/firedoors-config
	cp -f ./firedoors-custom-rules /etc/firedoors/firedoors-custom-rules
	cp -f ./firedoors-ip-blacklist /etc/firedoors/firedoors-ip-blacklist
	cp -f ./firedoors-README /etc/firedoors/firedoors-README


	cp -f ./firedoors /etc/init.d/
	cp -f ./firedoors.1.gz /usr/share/man/man1/
	chown root.root /etc/firedoors/firedoors-config /etc/init.d/firedoors /usr/share/man/man1/firedoors.1.gz >&/dev/null 2>&1
	chmod -R 755 /etc/init.d/firedoors >&/dev/null 2>&1
	ln -s -f /etc/init.d/firedoors /usr/bin/firedoors >&/dev/null 2>&1
	service=`ls -l /etc/rc2.d | grep firedoors`
	if [ "$service" == "" ]; then
		echo "Configuring Firedoors firewall to auto-start on boot..."
		update-rc.d firedoors start 85 2 3 4 5 . stop 20  0 1 6 .
	else
		echo "Reconfiguring Firedoors firewall bootup settings..."
		update-rc.d -f firedoors.sh remove >&/dev/null 2>&1
		update-rc.d -f firedoors remove >&/dev/null 2>&1
		sleep 1
		update-rc.d firedoors start 85 2 3 4 5 . stop 20  0 1 6 .
	fi
	#  Accomodates dynamic (DHCP) configurations and causes Firedoors to reload upon obtaining a new IP address from the server
	#  First remove legacy Firedoors entry if it exists
	if [ -f /etc/dhcp3/dhclient-exit-hooks ]; then
		legacy_check=`grep 'firedoors.sh' /etc/dhcp3/dhclient-exit-hooks`
		if [ "$legacy_check" != "" ]; then
			cat /etc/dhcp3/dhclient-exit-hooks | egrep -v '\/etc\/init\.d\/firedoors\.sh' > /tmp/d-e-hooks
			cp /tmp/d-e-hooks /etc/dhcp3/dhclient-exit-hooks
			chmod 755 /etc/dhcp3/dhclient-exit-hooks
			rm -f /tmp/d-e-hooks >&/dev/null 2>&1
		fi
	fi
	if [ -f /etc/dhcp3/dhclient-exit-hooks ]; then
		already_entered=`grep 'firedoors' /etc/dhcp3/dhclient-exit-hooks`
		if [ "$already_entered" == "" ]; then
			echo "/etc/init.d/firedoors reload" >> /etc/dhcp3/dhclient-exit-hooks
			chmod 755 /etc/dhcp3/dhclient-exit-hooks
		fi
	else
		echo "/etc/init.d/firedoors reload" >> /etc/dhcp3/dhclient-exit-hooks
		chmod 755 /etc/dhcp3/dhclient-exit-hooks
	fi
	if [[ -f /usr/bin/gedit && "$DISPLAY" != "" ]]; then
		echo
		echo "By default, Firedoors firewall is disabled in the configuration file.  You will need to open it up in an editor"
		echo "and set the, 'DISABLED' directive to, 'no' in order to enable it.  While you have the configuration file open,"
		echo "take some time to look at all the options so that you can optimally configure Firedoors firewall  for your system."
		echo -e '\E[1;33m'
		echo "Would you like to open the config file using gedit (text editor) at this time?  (y=yes, n=no):"
		echo -e '\E[32;0m'
		read open_config
		while [[ "$open_config" != "y" && "$open_config" != "n" && "$open_config" != "Y" && "$open_config" != "N" ]]; do
			clear
			echo -e '\E[31;40m'
			echo "Huh?  Invalid entry --> $open_config"
			sleep 1
			echo -e '\E[1;33m'
			echo "Would you like to open the config file using gedit (text editor) at this time?  (y=yes, n=no):"
			echo -e '\E[32;0m'
			read open_config
		done
		if [[ "$open_config" == "y" || "$open_config" == "Y" ]]; then
			/usr/bin/gedit /etc/firedoors/firedoors-config 2> /dev/null
			sleep 1
			/etc/init.d/firedoors start
		else
			echo -e '\E[1;33m'
			echo "Don't forget to edit Firedoors's configuration file (/etc/firedoors/firedoors-config) for your system!"
			echo "At a minimum, you'll need to enable firedoors in the config file by setting the, 'DISABLED' directive"
			echo "to, 'no'.  'gksudo gedit /etc/firedoors/firedoors-config' will open it up in a text editor for you to make the"
			echo "necessary changes.  Enjoy!"
			echo -e '\E[32;0m'
		fi
	else
		if [ -f /usr/bin/pico ]; then
			echo -e '\E[1;33m'
			echo "Would you like to open the config file in pico (text editor) at this time?  (y=yes, n=no):"
			echo -e '\E[32;0m'
			read open_config
			while [[ "$open_config" != "y" && "$open_config" != "n" && "$open_config" != "Y" && "$open_config" != "N" ]]; do
				clear
				echo -e '\E[31;40m'
				echo "Huh?  Invalid entry --> $open_config"
				sleep 1
				echo -e '\E[1;33m'
				echo "Would you like to open the config file in pico (text editor) at this time?  (y=yes, n=no):"
				echo -e '\E[32;0m'
				read open_config
			done
			if [[ "$open_config" == "y" || "$open_config" == "Y" ]]; then
				/usr/bin/pico /etc/firedoors/firedoors-config
				sleep 1
				/etc/init.d/firedoors start
			else
				echo -e '\E[1;33m'
				echo "Don't forget to edit Firedoors firewall configuration file (/etc/firedoors/firedoors-config) for your system!"
				echo "At a minimum, you'll need to enable Firedoors firewall in the config file by setting the, 'DISABLED' directive"
				echo "to, 'no'.  'sudo pico /etc/firedoors/firedoors-config' will open it up in a text editor for you to make the"
				echo "necessary changes.  Enjoy!"
				echo -e '\E[32;0m'
			fi
		fi
	fi
	exit 0
fi
#  Un-install selected
if [[ "$installorremove" == "R" || "$installorremove" == "r" ]]; then
	echo "Removing firedoors..."
	sleep 1
	rm -f /etc/firedoors/firedoors-config >&/dev/null 2>&1
	rm -f /etc/init.d/firedoors.sh >&/dev/null 2>&1
	rm -f /etc/init.d/firedoors >&/dev/null 2>&1
	rm -f /usr/bin/firedoors >&/dev/null 2>&1
	rm -f /usr/share/man/man1/firedoors.1.gz >&/dev/null 2>&1
	update-rc.d -f firedoors.sh remove >&/dev/null 2>&1
	update-rc.d -f firedoors remove >&/dev/null 2>&1
	if [ -f /etc/dhcp3/dhclient-exit-hooks ] ; then
		cat /etc/dhcp3/dhclient-exit-hooks | egrep -v '\/etc\/init\.d\/firedoors\.sh|\/etc\/init\.d\/firedoors' > /tmp/d-e-hooks
		cp /tmp/d-e-hooks /etc/dhcp3/dhclient-exit-hooks >&/dev/null 2>&1
		chmod 755 /etc/dhcp3/dhclient-exit-hooks >&/dev/null 2>&1
		rm -f /tmp/d-e-hooks >&/dev/null 2>&1
	fi
	echo "Firedoors firewall has been removed from your system!"
	exit 0
fi
exit 1

